#include <math.h>

const int fanPin = 13;
const int seriesResistor = 10000;

const int ntcNominalResistance = 10000;
const int ntcNominalTemp = 25;
const int betaCoefficient = 3950;

#define FAN_OFF  0
#define FAN_HALF 1
#define FAN_FULL 2

int fanMode = FAN_OFF;

unsigned long previousMillis = 0;
const long readInterval = 500;

void setup() {
  pinMode(fanPin, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  unsigned long currentMillis = millis();

  if (currentMillis - previousMillis >= readInterval) {
    previousMillis = currentMillis;

    float tempC = readTemperature();
    
    if (tempC < 25.0) {
      fanMode = FAN_OFF;
    } else if (tempC >= 25.0 && tempC < 30.0) {
      fanMode = FAN_HALF;
    } else {
      fanMode = FAN_FULL;
    }

    printStatus(tempC);
  }
  
  runTheFan();
}

float readTemperature() {
  int adcValue = analogRead(A0);
  
  float resistance = seriesResistor / (1023.0 / adcValue - 1.0);
  
  float steinhart;
  steinhart = resistance / ntcNominalResistance;
  steinhart = log(steinhart);
  steinhart /= betaCoefficient;
  steinhart += 1.0 / (ntcNominalTemp + 273.15);
  steinhart = 1.0 / steinhart;
  float tempKelvin = steinhart;
  
  float tempC = tempKelvin - 273.15;
  
  return tempC;
}

void runTheFan() {
  switch (fanMode) {
    case FAN_OFF:
      digitalWrite(fanPin, LOW);
      break;

    case FAN_HALF:
      digitalWrite(fanPin, (millis() % 20) < 10);
      break;

    case FAN_FULL:
      digitalWrite(fanPin, HIGH);
      break;
  }
}

void printStatus(float tempC) {
  Serial.print("Temp: ");
  Serial.print(tempC);
  Serial.print(" C  |  Fan is: ");
  
  switch (fanMode) {
    case FAN_OFF:
      Serial.println("OFF");
      break;
    case FAN_HALF:
      Serial.println("Running at 50% Speed");
      break;
    case FAN_FULL:
      Serial.println("Running at FULL Speed");
      break;
  }
}
